#export PS1="\w$ "
#export EDITOR="mate_wait"

#export CFLAGS="-arch i386 -arch x86_64"
export CFLAGS="-arch x86_64"
export PYTHON_EGG_CACHE="/tmp"
#export JAVA_HOME="$(/usr/libexec/java_home)"

#export EC2_PRIVATE_KEY="$(/bin/ls $HOME/.ec2/pk-*.pem)"
#export EC2_CERT="$(/bin/ls $HOME/.ec2/cert-*.pem)"
#export AWS_AUTO_SCALING_HOME="/usr/local/Cellar/auto-scaling/1.0.49.1/jars"

#export MACOSX_DEPLOYMENT_TARGET=10.6
#export CFLAGS="-arch x86_64 -arch i386 -g -Os -pipe -no-cpp-precomp"
#export CCFLAGS="-arch x86_64 -arch i386 -g -Os -pipe"
#export CXXFLAGS="-arch x86_64 -arch i386 -g -Os -pipe"
#export LDFLAGS="-arch x86_64 -arch i386 -bind_at_load"

if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

# For Boot2Docker - Docker Toolbox - REMOVED
#export DOCKER_TLS_VERIFY=1
#export DOCKER_HOST=tcp://192.168.59.103:2376
#export DOCKER_CERT_PATH=$HOME/.boot2docker/certs/boot2docker-vm

# Updated CACERT Bundle for curl
#export CURL_CA_BUNDLE=$HOME/.dotfiles/curl/cacert.pem

# Node Version Manager (nvm)
#export NVM_DIR="$HOME/.nvm"
#[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
# This loads nvm bash_completion
#[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
#nvm use stable

# Init nodenv
export NODE_BUILD_DEFINITIONS="/usr/local/homebrew/opt/node-build-update-defs/share/node-build"
eval "$(nodenv init - --no-rehash)"

